name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build for amd64
      run: GOOS=linux GOARCH=amd64 go build -o iptest-linux-amd64 main.go

    - name: Build for arm5
      run: GOOS=linux GOARCH=arm5 go build -o iptest-linux-arm5 main.go

    - name: Build for arm6
      run: GOOS=linux GOARCH=arm6 go build -o iptest-linux-arm6 main.go

    - name: Build for arm7
      run: GOOS=linux GOARCH=arm7 go build -o iptest-linux-arm7 main.go
      
    - name: Build for arm8
      run: GOOS=linux GOARCH=arm8 go build -o iptest-linux-arm8 main.go

    - name: Build for arm64
      run: GOOS=linux GOARCH=arm64 go build -o iptest-linux-arm64 main.go
      
    - name: Build for windows64
      run: GOOS=windows GOARCH=amd64 go build -o iptest-windows64.exe main.go

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          body: |
            Description of the release
          draft: false
          prerelease: false

    - name: Upload amd64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-linux-amd64
        asset_name: iptest-linux-amd64
        asset_content_type: application/octet-stream
 
    - name: Upload arm5 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-linux-arm5
        asset_name: iptest-linux-arm5
        asset_content_type: application/octet-stream
 
    - name: Upload arm6 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-linux-arm6
        asset_name: iptest-linux-arm6
        asset_content_type: application/octet-stream
        
 
    - name: Upload arm7 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-linux-arm7
        asset_name: iptest-linux-arm7
        asset_content_type: application/octet-stream       
  
    - name: Upload arm8 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-linux-arm8
        asset_name: iptest-linux-arm8
        asset_content_type: application/octet-stream  

    - name: Upload arm64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-linux-arm64
        asset_name: iptest-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload windows64 binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iptest-windows64.exe
        asset_name: iptest-windows64.exe
        asset_content_type: application/octet-stream
